<?xml version="1.0" encoding="utf-8"?>

<!-- 
  Copyright (C) 2021 kamenokonokotan. All rights reserved. 
  Licensed under the MIT License.
  - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
  Copyright (C) 2015 Patrick Mours. All rights reserved. 
  Licensed under the BSD 2-Clause "Simplified" License.
-->

<Rule Name="Link" DisplayName="Emscripten リンカ" PageTemplate="tool" Order="20" SwitchPrefix="-" xmlns="http://schemas.microsoft.com/build/2009/properties" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:sys="clr-namespace:System;assembly=mscorlib">

  <Rule.Categories>
    <Category Name="General" DisplayName="全般" />
    <Category Name="Input" DisplayName="入力" />
    <Category Name="Debugging" DisplayName="デバッグ"/>
    <Category Name="System" DisplayName="システム"/>
    <Category Name="Optimization" DisplayName="最適化" />
    <Category Name="Advanced" DisplayName="詳細設定" />
    <Category Name="All Options" DisplayName="すべての設定" Subtype="Search" />
    <Category Name="Command Line" DisplayName="コマンド ライン" Subtype="CommandLine" />
  </Rule.Categories>
  <Rule.DataSource>
    <DataSource Persistence="ProjectFile" ItemType="Link" Label="" HasConfigurationCondition="true" />
  </Rule.DataSource>

  <!-- General -->
  
  <StringProperty Subtype="file" Name="OutputFile" DisplayName="出力ファイル" Category="General" Switch="o" Separator=" " />
  <StringListProperty Subtype="folder" Name="AdditionalLinkDirectories" DisplayName="追加のライブラリディレクトリ" Description="環境のライブラリパスをユーザがオーバライドできるようにします。(-L[folder])" Category="General" Switch="L" />

  <BoolProperty Name="LinkLibraryDependencies" DisplayName="ライブラリ依存関係のリンク" Description="プロジェクト依存関係からのライブラリ出力を自動的にリンクするかどうかを指定します。" Category="General" IncludeInCommandLine="false" F1Keyword="VC.Project.VCLinkerTool.LinkLibraryDependencies">
    <BoolProperty.DataSource>
      <DataSource Persistence="ProjectFile" ItemType="ProjectReference" Label="" HasConfigurationCondition="true" />
    </BoolProperty.DataSource>
  </BoolProperty>
  <BoolProperty Name="UseLibraryDependencyInputs" DisplayName="ライブラリ依存関係の入力の使用" Description="プロジェクト依存関係のライブラリ出力にリンクする時に、ライブラリ ファイル自体にではなく、ライブラリアン ツールへの入力を使用するかどうかを指定します。" Category="General" IncludeInCommandLine="false" F1Keyword="VC.Project.VCLinkerTool.UseLibraryDependencyInputs">
    <BoolProperty.DataSource>
      <DataSource Persistence="ProjectFile" ItemType="ProjectReference" Label="" HasConfigurationCondition="true" />
    </BoolProperty.DataSource>
  </BoolProperty>

  <EnumProperty Name="Warnings" DisplayName="警告" Description="コード エラーに対するコンパイラの警告を指定します。(-w, -Wall)" Category="General">
    <EnumValue Name="DisableAllWarnings" DisplayName="すべての警告を抑制する" Description="すべての警告を抑制します。" Switch="w" />
    <EnumValue Name="NormalWarnings" DisplayName="一般的な警告を有効にする" Description="規定の警告レベルを使用します。" />
    <EnumValue Name="AllWarnings" DisplayName="すべての警告を有効にする" Description="既定で無効にされている警告を含む、すべての警告を有効にします。" Switch="Wall" />
  </EnumProperty>
  <BoolProperty Name="TreatWarningAsError" DisplayName="警告をエラーとして扱う" Description="コンパイラ警告をエラーとして扱います。(-Werror)" Category="General" Switch="Werror" />

  <BoolProperty Name="IgnoreDynamicLinking" DisplayName="ダイナミック リンクを無効にする" Description="ダイナミックリンク ライブラリをリンクするとき、emcc はダイナミックリンク ライブラリをスタティックライブラリとして取り扱います。これは、同じダイナミックリンクライブラリが複数回リンクされると失敗します。このオプションを有効にすることで、ダイナミック リンクが無視され、ビルドエラーを抑制することができます。その代わり、共有ライブラリを手動で読み込む必要があります。ダイナミックリンク ライブラリの最適化プロセスは生成される JavaScript コードに対して行われます。(-ignore-dynamic-linking)" Category="General" Switch="-ignore-dynamic-linking" />

  <!-- Input -->

  <StringListProperty Subtype="file" Name="AdditionalDependencies" DisplayName="追加の依存ファイル" Description="リンク コマンド ラインに追加する項目を指定します。" Category="Input" Switch="l" />

  <StringListProperty Subtype="file" Name="PreJsFile" DisplayName="Pre-Add JavaScript File" Description="生成されるスクリプトファイルの冒頭に埋め込まれる JavaScript ファイルを指定します。これは、実行時の最適化が行われる前に読み込まれます。(--pre-js)" Category="Input" Switch="-pre-js " />
  <StringListProperty Subtype="file" Name="PostJsFile" DisplayName="Post-Add JavaScript File" Description="生成されるスクリプトファイルの末尾に埋め込まれる JavaScript ファイルを指定します。これは、実行時の最適化が行われた後に読み込まれます。(--post-js)" Category="Input" Switch="-post-js " />
  <StringListProperty Subtype="file" Name="EmbedFile" DisplayName="埋め込む リソースファイル" Description="生成される JavaScript ファイル内に埋め込まれるリソースファイルを指定します。(--embed-file)" Category="Input" Switch="-embed-file " />
  <StringListProperty Subtype="file" Name="PreloadFile" DisplayName="プリロードされる リソースファイル" Description="コンパイルされた JavaScript コードが実行される前に読み込まれるリソースファイルを指定します。(--preload-file)" Category="Input" Switch="-preload-file " />

  <StringListProperty Subtype="file" Name="HtmlShellFile" DisplayName="HTML テンプレート" Description="コンパイルされた JavaScript コードが埋め込まれる HTML テンプレートファイルを指定します。(--shell-file)" Category="Input" Switch="-shell-file " />
  <StringListProperty Subtype="file" Name="JsLibrary" DisplayName="追加の JavaScript ライブラリ" Description="生成されたコードにリンクされる追加の JavaScript ライブラリファイルを指定します。(--js-library)" Category="Input" Switch="-js-library " />

  <StringProperty Name="IncludedAssetTargets" DisplayName="追加のプリロードされるファイルのターゲット名" Description="プリロードされるファイルに追加すべきターゲット名を指定します。" IncludeInCommandLine="false" Category="Input" />
  
  <!-- Debugging -->

  <EnumProperty Name="GenerateDebugInformation" DisplayName="デバッグ情報の生成" Description="このオプションを指定すると、デバッグ情報の作成が可能になります。" Category="Debugging">
    <EnumValue Name="NotSpecified" DisplayName="未指定" Description="デバッグ情報を生成しません。" />
    <EnumValue Name="NoDebugInformation" DisplayName="いいえ" Description="デバッグ情報を生成しません。" Switch="g0" />
    <EnumValue Name="MinimalDebugInformation" DisplayName="最小限のデバッグ情報の生成" Description="出力される JavaScript ファイルのホワイトスペースを保持します。" Switch="g1" />
    <EnumValue Name="WithDebugInformation" DisplayName="デバッグ情報の生成" Description="-g1 に加え、出力されるバイナリに関数名を保持します。" Switch="g2" />
    <EnumValue Name="MoreDebugInformation" DisplayName="LLVM デバッグ情報の生成" Description="-g2 に加え、LLVM デバッグ情報を保持します。" Switch="g3" />
    <EnumValue Name="FullDebugInformation" DisplayName="ソースマップの生成" Description="-g3 に加え、LLVM デバッグ情報からソースマップを作成します。このオプションによって、ブラウザの開発ツールで C/C++ ソースを表示し、デバッグすることができるようになります。" Switch="g4" />
  </EnumProperty>
  <StringProperty Name="SourceMapBase" DisplayName="ソースマップ URL" Description="ソースマップを有効にした時の、ソースファイルへのベース URL を設定します。(--source-map-base [base url])" Category="Debugging" Switch="-source-map-base" />

  <BoolProperty Name="Profiling" DisplayName="プロファイリングを有効にする" Description="出力される JavaScript ファイルが可読形式になるようにします。(--profiling)" Category="Debugging" Switch="-profiling" />
  <BoolProperty Name="ProfilingFunctions" DisplayName="関数プロファイリングを有効にする" Description="出力されるバイナリに関数名を保持します。(--profiling-funcs)" Category="Debugging" Switch="-profiling-funcs" />
  <BoolProperty Name="Tracing" DisplayName="追跡を有効にする" Description="Emscripten Tracing API を有効にします。詳細は https://emscripten.org/docs/api_reference/trace.h.html#trace-h を参照してください。(--tracing)" Category="Debugging" Switch="-tracing" />
  <BoolProperty Name="EmitSymbolMap" DisplayName="シンボルマップの生成" Description="出力される JavaScript ファイルの縮小化によって短縮された関数名と、縮小化前の関数名を紐づけるファイルを生成します。(--emit-symbol-map)" Category="Debugging" Switch="-emit-symbol-map" />

  <BoolProperty Name="CPUProfiling" DisplayName="CPUプロファイリングを有効にする" Description="出力されるページに CPU プロファイラを埋め込みます。(--cpuprofiler)" Category="Debugging" Switch="-cpuprofiler" />
  <BoolProperty Name="MemoryProfiling" DisplayName="メモリプロファイリングを有効にする" Description="出力されるページにメモリプロファイラを埋め込みます。(--memoryprofiler)" Category="Debugging" Switch="-memoryprofiler" />
  <BoolProperty Name="ThreadProfiling" DisplayName="スレッドプロファイリングを有効にする" Description="出力されるページにスレッドプロファイラを埋め込みます。(--threadprofiler)" Category="Debugging" Switch="-threadprofiler" />

  <!-- System -->

  <StringProperty Name="HeapInitialSize" DisplayName="初期ヒープ サイズの設定" Description="ヒープ領域に割り当てる総サイズの初期値を指定します。既定値は 16 MB です。(-s INITIAL_MEMORY)" Category="System" Switch="s INITIAL_MEMORY=" />
  <StringProperty Name="HeapMaximumSize" DisplayName="最大ヒープ サイズの設定" Description="ヒープ領域に割り当てる総サイズの最大値を指定します。既定値は 2 GB です。(-s INITIAL_MEMORY)" Category="System" Switch="s MAXIMUM_MEMORY=" />
  <BoolProperty Name="EnableMemoryGrowth" DisplayName="メモリ伸張の有効化" Description="ヒープ領域の総サイズが要求サイズに対して不足したときに、自動的にメモリを伸張します。" Category="System" Switch="s ALLOW_MEMORY_GROWTH=1" />

  <BoolProperty Name="EmRun" DisplayName="emrun の有効化" Description="emrun コマンドラインツールから起動できるように設定します。" Category="Advanced" Switch="-emrun" />
  <BoolProperty Name="EmBind" DisplayName="embind の有効化" Description="embind モジュールを有効にします。" Category="Advanced" Switch="-bind" />

  <!-- Optimization -->

  <EnumProperty Name="LinkerOptimizationLevel" DisplayName="最適化" Category="Optimization">
    <EnumValue Name="Custom" DisplayName="カスタム" Description="カスタムの最適化。" />
    <EnumValue Name="O0" DisplayName="無効" Switch="O0" />
    <EnumValue Name="O1" DisplayName="最小限の最適化" Description="asm.js、relooping、例外の無効化、アサーションの無効化、関数ポインタの別名化" Switch="O1" />
    <EnumValue Name="O2" DisplayName="一般的な最適化" Switch="O2" />
    <EnumValue Name="O3" DisplayName="最大限の最適化" Description="LLVM リンク時最適化 (LTO)、closure コンパイラ、メモリの整列、double から float への変換、int64 から double への変換" Switch="O3" />
    <EnumValue Name="Os" DisplayName="最大限の最適化 (速度重視)" Description="LLVM リンク時最適化 (LTO)、closure コンパイラ、メモリの整列、double から float への変換、int64 から double への変換" Switch="Os" />
    <EnumValue Name="Oz" DisplayName="最大限の最適化 (サイズ重視)" Description="LLVM リンク時最適化 (LTO)、closure コンパイラ、メモリの整列、double から float への変換、int64 から double への変換" Switch="Oz" />
  </EnumProperty>

  <EnumProperty Name="RunJavaScriptOptimization" DisplayName="JavaScript 最適化を有効にする" Description="出力される JavaScript ファイルに対する最適化を設定します。(--js-opts)" Category="Optimization">
    <EnumValue Name="NotSpecified" DisplayName="未指定" Description="最適化レベルに応じて設定します。" />
    <EnumValue Name="NoJavaScriptOptimization" DisplayName="いいえ" Description="JavaScript 最適化を無効にします。" Switch="-js-opts 0" />
    <EnumValue Name="JavaScriptOptimization" DisplayName="はい" Description="JavaScript 最適化を有効にします。" Switch="-js-opts 1" />
  </EnumProperty>
  <EnumProperty Name="RunLLVMOptimization" DisplayName="LLVM 最適化" Description="LLVM 最適化を設定します。(--llvm-opts)" Category="Optimization">
    <EnumValue Name="NotSpecified" DisplayName="未指定" Description="最適化レベルに応じて設定します。" />
    <EnumValue Name="NoLLVMOptimization" DisplayName="無効" Description="LLVM 最適化を無効にします。" Switch="-llvm-opts 0" />
    <EnumValue Name="LLVMOptimizationLevel1" DisplayName="最小限の最適化" Description="LLVM 最適化を有効にします。" Switch="-llvm-opts 1" />
    <EnumValue Name="LLVMOptimizationLevel2" DisplayName="一般的の最適化" Description="LLVM 最適化を有効にします。" Switch="-llvm-opts 2" />
    <EnumValue Name="LLVMOptimizationLevel3" DisplayName="最大限の最適化" Description="LLVM 最適化を有効にします。" Switch="-llvm-opts 3" />
  </EnumProperty>
  <EnumProperty Name="RunLLVMLinkTimeOptimization" DisplayName="LLVM リンク時最適化" Description="LLVM リンク時最適化を設定します。(--llvm-lto)" Category="Optimization">
    <EnumValue Name="NotSpecified" DisplayName="未指定" Description="最適化レベルに応じて設定します。" />
    <EnumValue Name="NoLLVMLTO" DisplayName="無効" Description="LLVM リンク時最適化を無効にします。" Switch="-llvm-lto 0" />
    <EnumValue Name="LLVMLTOLevel1" DisplayName="最小限の最適化" Description="LLVM リンク時最適化を有効にします。" Switch="-llvm-lto 1" />
    <EnumValue Name="LLVMLTOLevel2" DisplayName="一般的の最適化" Description="モジュールをまたいだ LLVM リンク時最適化を有効にします。" Switch="-llvm-lto 2" />
    <EnumValue Name="LLVMLTOLevel3" DisplayName="最大限の最適化" Description="最大限の LLVM リンク時最適化を有効にします。" Switch="-llvm-lto 3" />
  </EnumProperty>

  <BoolProperty Name="RunClosureCompiler" DisplayName="Closure コンパイラを使用する" Description="ビルド時に Closure コンパイラを使用します。(--closure)" Category="Optimization" Switch="-closure 1" ReverseSwitch="-closure 0" />
  <BoolProperty Name="RunMinify" DisplayName="JavaScript ミニファイアを使用する" Description="ビルド時に JavaScript ミニファイアを使用します。(--minify)" Category="Optimization" Switch="-minify 1" ReverseSwitch="-minify 0" />

  <!-- Advanced -->

  <EnumProperty Name="TypedArrays" DisplayName="型付き配列の使用" Description="型付き配列のコンパイル方法を指定します。https://github.com/kripken/emscripten/wiki/Code-Generation-Modes を参照してください。" Category="Advanced">
    <EnumValue Name="Default" DisplayName="既定" />
    <EnumValue Name="NoTypedArrays" DisplayName="使用しない" Switch="-typed-arrays=0" />
    <EnumValue Name="ParallelTypedArrays" DisplayName="並列化された型付き配列を使用する" Switch="-typed-arrays=1" />
    <EnumValue Name="SharedTypedArrays" DisplayName="共有された型付き配列を使用する" Switch="-typed-arrays=2" />
  </EnumProperty>

  <StringListProperty Subtype="folder" Name="EnableWarnings" DisplayName="指定のエラーを有効にする" Description="指定した警告を有効にします。複数指定する場合は、セミコロンで区切ってください。(-W[エラー名])" Category="Advanced" Switch="W" />
  <StringListProperty Subtype="folder" Name="DisableWarnings" DisplayName="指定のエラーを無効にする" Description="指定した警告を無効にします。複数指定する場合は、セミコロンで区切ってください。(-Wno-[エラー名])" Category="Advanced" Switch="Wno-" />

  <BoolProperty Name="EchoCommandLines" DisplayName="コマンド ラインの表示" Description="ビルド中のコマンドラインを表示します。" Category="Advanced" />

  <!-- Command Line -->

  <StringProperty Name="AdditionalOptions" DisplayName="追加のオプション" Description="追加のオプション" Category="Command Line" />

</Rule>
